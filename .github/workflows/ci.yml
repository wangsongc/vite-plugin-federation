name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, windows-2019]
        node_version: [14, 12]
      fail-fast: false
    name: 'Build&Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}

      # - name: Get yarn cache directory
      #   id: yarn-cache
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Set dependencies cache
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ steps.yarn-cache.outputs.dir }}
      #     key: ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('yarn.lock') }}
      #       ${{ runner.os }}-${{ matrix.node_version }}-

      - name: Versions
        run: yarn versions

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build
      # - name: Setup tmate session
      #       uses: mxschmitt/action-tmate@v3
      # - uses: shaowenchen/debugger-action@v2
      #   name: debugger
      #   timeout-minutes: 30
      #   continue-on-error: true
      #   with:
      #     ngrok_token: ${{ secrets.NGROK_AUTH_TOKEN }}
      - name: Test
        continue-on-error: true
        timeout-minutes: 5
        run: yarn test
      # - name: Ngrok debugging on failure
      #   if: failure()
      #   env:
      #     NGROK_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      #   run: |
      #     choco install --yes --no-progress ngrok
      #     ngrok.exe authtoken $env:NGROK_TOKEN
      #     Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      #     Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      #     Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      #     Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "$env:NGROK_TOKEN" -Force)
      #     ngrok.exe tcp 3389
